% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match.R
\name{str_match}
\alias{str_match}
\title{Extract matched groups from a string}
\usage{
str_match(string, pattern)
}
\arguments{
\item{string}{\verb{character vector} of strings.}

\item{pattern}{\code{string} or \verb{character vector}, pattern(s) to match. Typically
contains multiple capture groups. Can be:
\itemize{
\item A Perl-compatible regular expression (default).
\item Wrap with \code{perl(ignore_case = TRUE)} to use case-insensitive matching.
\item Wrap with \code{fixed()} to use a fixed/literal match.
\item Wrap with \code{regex()} to use a POSIX 1003.2 extended regular expression.
\item Wrap with \code{regex(ignore_case = TRUE)} to use case-insensitive matching with
a POSIX 1003.2 extended regular expression.
}}
}
\value{
Returns a \verb{character matrix} for \code{str_match()}. The first column is
the complete match, followed by one column for each capture group.
Returns a \code{list} of \verb{character matrices} for \code{str_match_all()}.
}
\description{
Vectorised over \code{string} and \code{pattern}.
}
\examples{
strings <- c(" 219 733 8965", "329-293-8753 ", "banana", "595 794 7569",
  "387 287 6718", "apple", "233.398.9187  ", "482 952 3315",
  "239 923 8115 and 842 566 4692", "Work: 579-499-7527", "$1000",
  "Home: 543.355.3679")
phone <- "([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})"

str_extract(strings, phone)
str_match(strings, phone)

# Extract/match all
str_extract_all(strings, phone)
#str_match_all(strings, phone)

x <- c("<a> <b>", "<a> <>", "<a>", "", NA)
str_match(x, "<(.*?)> <(.*?)>")
#str_match_all(x, "<(.*?)>")

str_extract(x, "<.*?>")
str_extract_all(x, "<.*?>")
}
\seealso{
\code{\link[=str_extract]{str_extract()}} to extract the complete match.
}
