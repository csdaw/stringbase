% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract.R
\name{str_extract}
\alias{str_extract}
\title{Extract matching patterns from a string}
\usage{
str_extract(string, pattern)
}
\arguments{
\item{string}{\verb{character vector} of strings.}

\item{pattern}{\code{character}, a pattern to match. Can be:
\itemize{
\item A Perl-compatible regular expression (default).
\item Wrap with \code{perl(ignore_case = TRUE)} to use case-insensitive matching.
\item Wrap with \code{fixed()} to use a fixed/literal match.
\item Wrap with \code{regex()} to use a POSIX 1003.2 extended regular expression.
\item Wrap with \code{regex(ignore_case = TRUE)} to use case-insensitive matching with
a POSIX 1003.2 extended regular expression.
}}
}
\value{
Returns a \verb{character vector} the same length as \code{string}. Non-matching
elements will be replaced with \code{NA}.
}
\description{
Vectorised over \code{string}, but not \code{pattern} which must be
a single string (unlike stringr).
}
\examples{
shopping_list <- c("apples x4", "bag of flour", "bag of sugar", "milk x2")
str_extract(shopping_list, "\\\\d")
str_extract(shopping_list, "[a-z]+")
str_extract(shopping_list, "[a-z]{1,4}")
str_extract(shopping_list, "\\\\b[a-z]{1,4}\\\\b")

}
